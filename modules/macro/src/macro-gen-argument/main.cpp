//
// Created by yarten on 24-1-9.
//

#include <fstream>
#include <sstream>

std::stringstream stream;

constexpr int max_args_count       = 50;
constexpr int max_last_args_count  = max_args_count;
constexpr int max_first_args_count = max_args_count;

void writeHead()
{
    stream << R"(/**
* \note This document is generated by the program. Please do not modify it.
*/

#pragma once

#include "./concat.h"
#include "./count.h"


/**
 * \brief Take the first n parameters from the parameter list.
 */
#define AOE_ARGS_FIRST(_n_, ...) AOE_CONCAT(AOE_DETAILS_ARGS_FIRST_, _n_)(__VA_ARGS__)

/**
 * \brief Take the remaining parameters (possibly null) except the first n parameters from the parameter list.
 */
#define AOE_ARGS_EXCEPT_FIRST(_n_, ...) AOE_CONCAT(AOE_DETAILS_ARGS_EXCEPT_FIRST_, _n_)(__VA_ARGS__)

/**
 * \brief Take the i-th to last parameter from the parameter list.
 */
#define AOE_ARGS_THE_LAST(_i_, ...) AOE_CONCAT(AOE_DETAILS_ARGS_THE_LAST_, _i_, _, AOE_COUNT_ARGS(__VA_ARGS__))(__VA_ARGS__)

/**
 * \brief Remove the i-th to last parameter from the parameter list.
 */
#define AOE_ARGS_EXCEPT_LAST(_i_, ...) AOE_CONCAT(AOE_DETAILS_ARGS_EXCEPT_LAST_, _i_, _, AOE_COUNT_ARGS(__VA_ARGS__))(__VA_ARGS__)

)";
}

void writeSelectFirstSome()
{
    stream << "// Helper macros that take the first n parameters" << std::endl;

    for (int i = 1; i <= max_first_args_count; ++i)
    {
        stream << "#define AOE_DETAILS_ARGS_FIRST_" << i << "(";

        for (int j = 1; j <= i; ++j)
            stream << "_x" << j << "_, ";

        stream << "...) ";

        for (int j = 1; j <= i; ++j)
        {
            if (j != 1)
                stream << ", ";

            stream << "_x" << j << "_";
        }

        stream << std::endl;
    }

    stream << std::endl;
}

void writeSelectExceptFirstSome()
{
    stream << "// Helper marcos that remove the first n parameters" << std::endl;

    for (int i = 1; i <= max_first_args_count; ++i)
    {
        stream << "#define AOE_DETAILS_ARGS_EXCEPT_FIRST_" << i << "(";

        for (int j = 1; j <= i; ++j)
            stream << "_x" << j << "_, ";

        stream << "...) __VA_ARGS__" << std::endl;
    }

    stream << std::endl;
}

void writeSelectTheLast()
{
    for (int i = 1; i <= max_last_args_count; ++i)
    {
        stream << "// Take the " << i << "-th to last parameter" << std::endl;

        for (int j = i; j <= max_args_count; ++j)
        {
            stream << "#define AOE_DETAILS_ARGS_THE_LAST_" << i << "_" << j << "(";

            for (int k = 1; k < j; ++k)
                stream << "_x" << k << "_, ";

            stream << "_x" << j << "_) _x" << j - (i - 1) << "_" << std::endl;
        }

        stream << std::endl;
    }
}

void writeSelectExceptLast()
{
    for (int i = 1; i <= max_last_args_count; ++i)
    {
        stream << "// Remove the i" << "-th to last parameter" << std::endl;

        for (int j = i; j <= max_args_count; ++j)
        {
            stream << "#define AOE_DETAILS_ARGS_EXCEPT_LAST_" << i << "_" << j << "(";

            for (int k = 1; k < j; ++k)
                stream << "_x" << k << "_, ";
            stream << "_x" << j << "_) ";

            for (int k = 1; k < j - i; ++k)
                stream << "_x" << k << "_, ";
            if (j - i > 0)
                stream << "_x" << j - i << "_";

            stream << std::endl;
        }

        stream << std::endl;
    }
}


int main()
{
    writeHead();
    writeSelectFirstSome();
    writeSelectExceptFirstSome();
    writeSelectTheLast();
    writeSelectExceptLast();

    std::ofstream file("macro-gen-arguments.txt");

    file << stream.str() << std::endl;

    return 0;
}
